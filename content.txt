초급: 기초적인 자료 구조와 알고리즘
기본 자료 구조
배열 (Array)
연결 리스트 (Linked List)
스택 (Stack)
큐 (Queue)
해시 테이블 (Hash Table)
기본 알고리즘
순차 탐색 (Linear Search)
이진 탐색 (Binary Search)
정렬 알고리즘
버블 정렬 (Bubble Sort)
선택 정렬 (Selection Sort)
삽입 정렬 (Insertion Sort)
재귀 (Recursion)
기본적인 재귀 문제 풀이 (팩토리얼, 피보나치 등)
재귀 함수의 시간 복잡도 분석
중급: 더 복잡한 알고리즘과 자료 구조
정렬 알고리즘 고급
병합 정렬 (Merge Sort)
퀵 정렬 (Quick Sort)
힙 정렬 (Heap Sort)
검색 알고리즘
이진 탐색 트리 (Binary Search Tree)
트라이 (Trie) 자료 구조
탐색 알고리즘
깊이 우선 탐색 (DFS)
너비 우선 탐색 (BFS)
동적 계획법 (Dynamic Programming)
피보나치 수열 (Fibonacci)
최장 공통 부분 수열 (Longest Common Subsequence)
동전 문제 (Coin Change)
배낭 문제 (Knapsack Problem)
그리디 알고리즘 (Greedy Algorithms)
활동 선택 문제 (Activity Selection Problem)
최소 스패닝 트리 (Kruskal's, Prim's 알고리즘)
고급: 복잡한 문제 해결 및 고급 알고리즘
그래프 알고리즘
다익스트라 알고리즘 (Dijkstra's Algorithm)
벨만-포드 알고리즘 (Bellman-Ford Algorithm)
플로이드-워셜 알고리즘 (Floyd-Warshall Algorithm)
최소 신장 트리 (Minimum Spanning Tree: Prim, Kruskal)
위상 정렬 (Topological Sorting)
트리 알고리즘
AVL 트리
레드-블랙 트리 (Red-Black Tree)
세그먼트 트리 (Segment Tree)
Fenwick 트리 (Binary Indexed Tree)
문자열 알고리즘
KMP 알고리즘 (Knuth-Morris-Pratt)
라빈-카프 알고리즘 (Rabin-Karp)
트라이 (Trie) 기반 문자열 검색
문제 해결 기법
분할 정복 (Divide and Conquer)
백트래킹 (Backtracking)
비트마스크 (Bitmasking)
네트워크 플로우 (Network Flow)
고급 동적 계획법
행렬 곱셈 순서 (Matrix Chain Multiplication)
최단 경로 알고리즘 (Shortest Path Algorithms)
최적화 문제
심화: 고급 알고리즘 및 수학적 접근
수학적 알고리즘
에라토스테네스의 체 (Sieve of Eratosthenes)
소수 판별 알고리즘 (Primality Testing)
페르마의 소정리 (Fermat's Little Theorem)
이진 거듭제곱 (Binary Exponentiation)
문제 해결을 위한 고급 알고리즘
트리 구조의 고급 문제
세그먼트 트리와 범위 쿼리
동적 계획법으로 풀 수 있는 최적화 문제들
파라메트릭 탐색 (Parametric Search)
시뮬레이션 및 수치 해법
물리 시뮬레이션
근사 알고리즘 (Approximation Algorithms)
실전: 알고리즘 문제 풀이
해커랭크, 백준, 코드포스 등 문제 풀이
알고리즘 문제를 풀며 실제 알고리즘의 적용을 연습
대회 문제
알고리즘 대회를 대비한 문제 풀이
시간 복잡도와 공간 복잡도를 고려한 최적화 문제 해결